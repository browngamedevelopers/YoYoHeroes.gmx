<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlock1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_world_gravity(0, 0);
phy_fixed_rotation = true;
ropingwall = false;
ropingbox = false;
pushinbox = false;
ropingthing = noone;
pushingsomething = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_apply_force(phy_com_x, phy_com_y, 0, ROOM_GRAVITY)

if(mouse_check_button(mb_left)){
    shootYoyo(mouse_x, mouse_y);
}

if(mouse_check_button(mb_right)){
    if(pushingthing == noone){
        thing = collision_line(x,y,mouse_x,mouse_y,objBox,false,true);
    }else {
        thing = pushingthing;
    }
    if(thing != noone ) {
        pushingbox = true;
        pushingthing = thing;
        with(thing){
            phy_speed_x = lengthdir_x(-10, point_direction(x,y,other.x,other.y));
            phy_speed_y = lengthdir_y(-10, point_direction(x,y,other.x,other.y));
        }
    } else {
        pushingbox = false;
    }
}else {
    pushingthing = noone;
    pushingbox = false;
}
/*canmove = position_meeting(x-16,y+32,objStatic) || position_meeting(x-16,y+32,objDynamic)
        || position_meeting(x+16,y+32,objStatic) || position_meeting(x+16,y+32,objDynamic) 
        || position_meeting(x,y+32,objStatic) || position_meeting(x,y+32,objDynamic);*/
        
canmove = position_meeting(x-16,y+32,objAllObjects) 
        || position_meeting(x+16,y+32,objAllObjects)
        || position_meeting(x,y+32,objAllObjects) ;
//canmove = true;
        
if(keyboard_check(vk_left) || keyboard_check(ord('A'))){
    //if(canmove){
        physics_apply_force(phy_com_x, phy_com_y, -90, 0);
    //}
}

if(keyboard_check(vk_right) || keyboard_check(ord('D'))){
    //if(canmove){
        physics_apply_force(phy_com_x, phy_com_y, 90, 0);
    //}
}
if(keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord('W'))){
    if(canmove){
        physics_apply_force(phy_com_x, phy_com_y, 0, -600);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objAllObjects">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//thing = collision_line(x,y,mouse_x,mouse_y,objAllObjects,false,true);
if(ropingthing != noone){
    thing = ropingthing;
}else if (pushingthing != noone){
    thing = pushingthing;
}else {
    thing = collision_line(x,y,mouse_x,mouse_y,objTargetable,false,true);
}

if(thing != noone){
    if(object_get_name(thing.object_index) == "objTarget"){
        if(ropingwall){
            drawRope(x,y,thing.x,thing.y,sprRope);
        }else{
            draw_set_color(c_red);
            draw_line(x,y,thing.x,thing.y);
        }
    }else if(object_get_name(thing.object_index) == "objBox"){
        //show_debug_message("isabox!");
        if(ropingbox || pushingbox){
            //show_debug_message("ropingbox!");
            drawRope(x,y,thing.x,thing.y,sprRope);
        }else{
            draw_set_color(c_green);
            draw_line(x,y,thing.x,thing.y);
        }
    }else {
        draw_set_color(c_blue);
        draw_line(x,y,thing.x,thing.y);
    }
}else {
    draw_set_color(c_white);
    draw_line(x,y,mouse_x,mouse_y);
}

draw_text(0,0,ropingbox);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.0500000007450581</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>10</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>0,32</point>
    <point>0,0</point>
    <point>32,0</point>
  </PhysicsShapePoints>
</object>
